(()=>{"use strict";window.wp.blob;const t=e=>e.endsWith("/")?t(e.substring(0,e.length-1)):e;!function(){const e=XMLHttpRequest.prototype.open,n=XMLHttpRequest.prototype.send;XMLHttpRequest.prototype.open=function(t,n,o,a,r){const s=!1!==o?"async":"sync";return console.info(`Preparing ${s} HTTP request : ${t} ${n}`),e.apply(this,arguments)},XMLHttpRequest.prototype.send=function(e){if(!(e instanceof FormData&&aamdPHPVariables))return n.apply(this,arguments);const o=e.get("name");if("string"!=typeof o||!o.toLowerCase().endsWith(".lottie")&&!o.toLowerCase().endsWith(".json"))return n.apply(this,arguments);const a=e.get("async-upload");if(!(a instanceof File))return n.apply(this,arguments);const r=new FileReader;return r.onloadend=async({target:e})=>{try{if(!(e?.result instanceof ArrayBuffer))return;const a=new Blob([e.result]),r=URL.createObjectURL(a),s=dotLottiePlayer();s.hidden=!0,document.body.appendChild(s),await s.load(r);const i=s.snapshot(!1);if(URL.revokeObjectURL(r),!i)throw new Error("Failed to create thumbnail");const p=new File([i],o.replace(/\.[^/.]+$/,".svg"),{type:"image/svg+xml"}),l=new FormData;l.append("aamd_thumbnail_submit",aamdPHPVariables.nonce),l.append("thumbnail",p);const c=await fetch((n=aamdPHPVariables.pluginUrl,`${t(n)}/includes/upload-thumbnail.php`),{body:l,method:"POST"});if(!c.ok)throw new Error(c.statusText)}catch(t){console.error(t)}var n},r.readAsArrayBuffer(a),n.apply(this,arguments)}}()})();