!function(){const t=XMLHttpRequest.prototype.open,e=XMLHttpRequest.prototype.send;XMLHttpRequest.prototype.open=function(e,n,a,o,r){const s=!1!==a?"async":"sync";return console.info(`Preparing ${s} HTTP request : ${e} ${n}`),t.apply(this,arguments)},XMLHttpRequest.prototype.send=function(t){if(!(t instanceof FormData&&aamdPHPVariables))return e.apply(this,arguments);const n=t.get("name");if("string"!=typeof n||!n.endsWith(".lottie"))return e.apply(this,arguments);const a=t.get("async-upload");if(!(a instanceof File))return e.apply(this,arguments);const o=new FileReader;return o.onloadend=async({target:t})=>{try{if(!(t?.result instanceof ArrayBuffer))return;const e=new Blob([t.result]),a=URL.createObjectURL(e),o=dotLottiePlayer();o.hidden=!0,document.body.appendChild(o),await o.load(a);const r=o.snapshot(!1);if(URL.revokeObjectURL(a),!r)throw new Error("Failed to create thumbnail");const s=new File([r],n.replace(/\.[^/.]+$/,".svg"),{type:"image/svg+xml"}),i=new FormData;i.append("aamd_thumnail_submit",""),i.append("thumbnail",s);const p=await fetch(`${aamdPHPVariables.pluginUrl}includes/upload-thumbnail.php`,{body:i,method:"POST"});if(!p.ok)throw new Error(p.statusText)}catch(t){console.error("foobar",t)}},o.readAsArrayBuffer(a),e.apply(this,arguments)}}();