(()=>{"use strict";window.wp.blob;const t=e=>e.endsWith("/")?t(e.slice(0,Math.max(0,e.length-1))):e;!function(){const{open:e}=XMLHttpRequest.prototype,{send:n}=XMLHttpRequest.prototype;XMLHttpRequest.prototype.open=function(t,n,o,a,s){const r=!1===o?"sync":"async";console.info(`Preparing ${r} HTTP request : ${t} ${n}`),e.apply(this,arguments)},XMLHttpRequest.prototype.send=function(e){if(!(e instanceof FormData&&aamdPHPVariables))return void n.apply(this,arguments);const o=e.get("name");if("string"!=typeof o||!o.toLowerCase().endsWith(".lottie")&&!o.toLowerCase().endsWith(".json"))return void n.apply(this,arguments);const a=e.get("async-upload");if(!(a instanceof File))return void n.apply(this,arguments);const s=new FileReader;s.onloadend=async({target:e})=>{try{if(!(e?.result instanceof ArrayBuffer))return;const a=new Blob([e.result]),s=URL.createObjectURL(a),r=dotLottiePlayer();r.hidden=!0,document.body.appendChild(r),await r.load(s);const i=r.snapshot(!1);if(URL.revokeObjectURL(s),!i)throw new Error("Failed to create thumbnail");const p=new File([i],o.replace(/\.[^/.]+$/,".svg"),{type:"image/svg+xml"}),l=new FormData;l.append("aamd_thumbnail_submit",aamdPHPVariables.nonce),l.append("thumbnail",p);const c=await fetch((n=aamdPHPVariables.pluginUrl,`${t(n)}/includes/upload-thumbnail.php`),{body:l,method:"POST"});if(!c.ok)throw new Error(c.statusText)}catch(t){console.error(t)}var n},s.readAsArrayBuffer(a),n.apply(this,arguments)}}()})();